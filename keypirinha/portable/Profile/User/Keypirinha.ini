[app]
# Application's main section.

# Should Keypirinha be launched when Windows starts?
# * It is the only setting that requires access to the Windows Registry.
# * If this value is false (or changed to false at runtime), the application
#   will always try to automatically unregister itself.
# * The following registry key is used by Keypirinha:
#   * Key: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\
#   * Value name: Keypirinha
# * Default: no
#launch_at_startup = no

# Hotkey to show/hide (toggle) the LaunchBox.
# * String must be formated that way: <modifiers> + <virtual_key>
# * <modifiers> can be one or several of the following modifier keys:
#   Alt, Ctrl, Shift, Win.
# * <virtual_key> can be:
#   * One of the following special keys:
#     Minus, Plus, Backspace, Tab, Return (or Enter), Pause, Escape (or Esc),
#     Space, PageUp (or PgUp), PageDown (or PgDown), End, Home, Left, Up, Right,
#     Down, Print, Insert, Ins, Delete, Del, NumLock, ScrollLock (or Scroll),
#     F1 to F24, and Numpad0 to Numpad9.
#   * Or a character from the main part of your keyboard. I.e. excluding the
#     numpad and the special keys enumerated above.
#     Note that not every typed character will work, see the "IMPORTANT" notice
#     below.
# * Examples: "Alt+Space", "Ctrl+Shift+Plus", "Ctrl+Alt+3", "Ctrl+Win+W",
#   "Ctrl+Alt+F2", "Shift+Alt+Return" (without quotes)
# * Note that while the "Win+<virtual_key>" form is possible, it is discouraged
#   by Microsoft as a given combination might be "reserved" for future use.
#   I.e.: a combination that works now may not be usable with future releases of
#   the OS.
# * IMPORTANT: some combinations won't trigger any error at registration time
#   but just won't work when pressed. In that special case, it is not possible
#   for Keypirinha to know if a hotkey actually does its job so you are on your
#   own and you'll probably have to choose another combination.
#   In any other case of error, a message dialog will pop up to inform you
#   something went wrong.
# * Default: Ctrl+Win+K
hotkey_run = Ctrl+Shift+X

# Hotkey to show the LaunchBox and paste the content of the clipboard if it
# contains text.
# * TIP: if this hotkey is pressed twice in a row, the selected item will be
#        executed without having to press Enter
# * This overrides the retain_last_search setting of the [gui] section
# * Expected format is the same than hotkey_run
# * Default: no default hotkey defined
#hotkey_paste = Ctrl+Alt+Space

# Hotkey to show the LaunchBox directly in History mode
# * This overrides the retain_last_search setting of the [gui] section
# * Expected format is the same than hotkey_run
# * Default: no default hotkey defined
#hotkey_history = Ctrl+Shift+Space

# The hotkey used to show/hide (toggle) the Console dialog.
# * Note this setting is for convenience only, you can always open the console
#   by pressing F2 from the LaunchBox or by searching for the
#   "Keypirinha: Console" item.
#   It can also be opened via Keypirinha's main contextual menu.
# * Expected format is the same than hotkey_run
# * Default: no default hotkey defined
#hotkey_console =

# Write log file?
# * Keypirinha and its plugin sometimes log some information about their status,
#   progress, warnings and errors.
# * Disabling this option helps improving privacy and is slightly easier on your
#   storage device, but it can be useful to keep it enabled for troubleshooting
# * Regardless of this option, Keypirinha's Console Window will always be
#   enabled and contain the logged data of the current session
# * CAUTION:
#   * Disabling this option does not cause your log file(s) to be erased!
#   * Changing this setting at runtime is supported but it is advised to to it
#     while Keypirinha is NOT running in order to get a clean/complete output
# * Log file(s) (*.log) are located under the "Local" directory of your profile,
#   which, depending on your Keypirinha config, is under the "portable" folder
#   of Keypirinha's install directory (portable mode), or in
#   "%LOCALAPPDATA%\Keypirinha".
# * Default: yes
#write_log_file = yes

# The list of the Packages to ignore.
# * This list must be comma-separated
# * "<all>" can be specified (without quotes) to ignore ALL packages, including
#   the Internal package
# * A package name can be prefixed by '-' or '+' (without quotes) to explicitly
#   SUBTRACT or ADD a package to the list.
# * Examples:
#   * ignored_packages = Foo, Four Words Package Name, Bar
#     Ignore packages "Foo", "Four Words Package Name" and "Bar"
#   * ignored_packages = <all>, -Internal, -Foo
#     Ignore ALL packages except "Internal" and "Foo".
#   * ignored_packages = Foo, <all>, Bar
#     Ignore ALL packages. "Foo" and "Bar" are redundant here.
#   * ignored_packages = -Bar, Foo, +Bar
#     Ignores "Bar" and "Foo" packages. The last occurrence of a same package
#     prevails.
#   * ignored_packages = Foo, -Bar
#     Ignores "Foo" package only.
#     "Bar" is explicitly subtracted from the list, which means it is NOT
#     marked as ignored.
# * Default: empty list, no package ignored
#ignored_packages = apps, bookmarks, calc, controlpanel, env, everything ,filebrowser, filescatalog, filezilla, googletranslate, internal, putty, regbrowser, string, taskswitcher, url, websearch, websuggest, winscp
ignored_packages = <all>, Bookmarks, -ControlPanel, -FilesCatalog, -GoogleTranslate, -Internal, -Url, -WebSearch, -WebSuggest, -SystemCommands

# Filter-out non-existent LOCAL files from the search results
# * When enabled, Keypirinha checks at search-time if the matching LOCAL FILE
#   items that were in the history still exist, then eventually filter them out
#   from the results list.
# * CAUTION:
#   If the GUI hangs too often at search-time (typically because of a HDD), try
#   disabling this setting as well as the "exclude_nonexistent_remote_files"
#   setting below.
# * Default: yes
#exclude_nonexistent_local_files = yes

# Filter-out non-existent REMOTE files from the search results
# * When enabled, Keypirinha checks at search-time if the matching REMOTE FILE
#   items that were in the history still exist, then eventually filter them out
#   from the results list.
# * CAUTION:
#   If the GUI hangs too often at search-time, try disabling this setting as
#   well as the "exclude_nonexistent_local_files" setting above.
# * Default: no
#exclude_nonexistent_remote_files = no

[gui]
# Section dedicated to the Graphical User Interface (GUI)

# Control how Keypirinha should position the LaunchBox
# * Note: this setting affects the behavior of the LaunchBox only. See the
#   setting with the same name in the [console] section to change the behavior
#   of the Console window.
# * Accepted values:
#   * auto:
#     When displayed, the window will always appear on the primary monitor,
#     horizontally centered, with a width proportional to the monitor size (see
#     the auto_width setting below)
#   * monitor_1, monitor_2, ...:
#     Same as 'auto' but allows to specify which monitor to use.
#   * active_monitor:
#     Same as 'auto' except that window will be displayed on the same monitor
#     than the currently active application.
#   * mouse_monitor:
#     Same as 'auto' except that window will be displayed on the same monitor
#     than the mouse pointer.
#   * mouse_pos:
#     The window will be positioned according to the coordinates of the mouse
#     pointer. If the default size of the window is too big, the window might be
#     moved and/or resized according to its functional constraints.
#   * persistent:
#     Keypirinha stores window's geometry (position and size) so it can be
#     restored the next time it is displayed, even after a restart.
#     If your monitor(s) configuration changes, Keypirinha tries to re-use the
#     window's geometry you setup the last time this monitors configuration was
#     active. If the same monitors configuration can't be found, Keypirinha will
#     translate and scale the previous position and size of the window according
#     to the current position and size of the primary monitor, so it feels like
#     the window is positioned the same way than before.
# * Default: auto
#geometry = auto

# The width of the LaunchBox, in percent of the full width of the monitor
# * Ignored if "geometry" setting is set to "persistent"
# * Accepted range is [5, 100]
# * The LaunchBox has a hard-coded minimum width of 400 pixels so the auto_width
#   may not always be honored for small values, depending on the width of the
#   monitor
# * Default: 33
auto_width = 30

# Should the LaunchBox be always on top of other windows when displayed?
# * Type: Boolean
# * Default: no
always_on_top = yes

# Should the LaunchBox automatically hide when it loses focus and how?
# * Accepted values:
#   * immediate: The LaunchBox will automatically and immediately hide when it
#     loses focus.
#   * delayed: The LaunchBox will hide after a small delay if it loses focus.
#     This value can come handy to help prevent losing your search state in case
#     an application inadvertently takes over the focus before releasing it.
#     Note that you may prefer the 'immediate' mode if you have enabled the
#     retain_last_search option below.
#   * no: The LaunchBox won't hide automatically
# * Type: Enum
# * Default: no
hide_on_focus_lost = yes

# Should the LaunchBox retain the last search terms, when it is displayed?
# * Accepted values:
#   * selected (formerly "yes"): the LaunchBox will automatically insert and
#     pre-select the initial search terms you typed during the previous search
#     session
#   * unselected: same as *selected* except that last search's terms are NOT
#     pre-selected
#   * no: LaunchBox's state is cleared upon invocation (default)
# * Type: Enum
# * Default: no
#retain_last_search = no

# Should the Escape key close the LaunchBox instead of just clearing your
# search?
# * Note that you can always close the LaunchBox with Shift+Esc or Alt+F4
# * Type: Boolean
# * Default: no
#escape_always_closes = no

# Should the LaunchBox advance to the next step when you hit the Space key while
# being at the first search step?
# * Notes:
#   * The Tab key always allows to advance to the next search step
#   * If this setting is enabled, it is applied only if the caret is at the end
#     of the search terms and while still at the initial search step
# * Type: Boolean
# * Default: no
#space_as_tab = no

# Loop-scroll the results list at its boundaries?
# * If this setting is enabled, when the last result item is selected and the
#   down key is pressed (or mouse's wheel down), selection will move up to the
#   first result item.
# * Type: Boolean
# * Default: no
#loop_list = no

# Single-click mode
# * The single-click mode allows to execute an item/action from the list by
#   single-clicking it (or by touching it) like if it was a web link for example
# * Also, when this mode is enabled, overing the results list with the cursor
#   will select the current item
# * Type: Boolean
# * Default: no
#single_click = no

# The maximum accepted height of the LaunchBox, in number of ITEMS (not pixels)
# * When you run a search, the LaunchBox extends its height within the
#   boundaries of the working area of the current screen, in order to display as
#   much result items as possible, without changing window's position.
# * This setting allows to limit LaunchBox's height, in terms of maximum number
#   of items that are visible without having to scroll the results list.
# * The value must be an integer in the range [0, 1000].
#   Where 0 means: extend height as much as possible within the boundaries of
#   the working area of the current screen.
# * For example, if max_height is 5 but only 3 results are found for the current
#   search, the LaunchBox height will be extended up to 3 items. But if 10
#   results have been found, the LaunchBox height will be extended up to 5
#   items.
# * Note that this setting is only about the height of the LaunchBox.
#   If you want to limit the number of returned results, check out the
#   "max_results" setting below in this section.
# * Default: 10
max_height = 8

# Should the LaunchBox button be visible on the taskbar when it gets activated?
# * Type: Boolean
# * Default: no
show_on_taskbar = no

# The maximum number of items in the list
# * Allows to limit the maximum number of items returned by Keypirinha's search
#   engine and incidentally to limit the time Keypirinha needs to display/draw
#   the items and their associated icons.
# * Value must be an integer in the range [10, 1000].
#   Any value out of boundaries will automatically be forced to the min or max
#   of the allowed range.
# * Check out the "max_height" setting if you just want to limit the height of
#   the LaunchBox itself.
# * Default: 100
max_results = 8

# Characters that are considered to be word separators
# * This setting impacts the behavior of the input controls (edit boxes) in
#   Keypirinha when you press Ctrl+Left or Ctrl+Right or Ctrl+Backspace for
#   example
# * If you do not know what it is about, you can safely ignore it
# * Blank characters are always considered word separators
# * This value:
#   * can be empty so only blank characters are word separators
#   * or it can contain a list of non-separated characters
# * CAUTION:
#   Due to the way Keypirinha reads config files, if you need to specify '$' as
#   a separator, you must double it.
#   I.e. type '$$' instead of '$' (without quotes).
# * A suggestion for those who are used to type code can be:
#     word_separators = /\()[]{}"'`^&|<>~*+=-.,:;?!@#%$$
# * Default: empty
#word_separators =

# The name of the graphical theme (GUI theming)
# * Tip: @Fuhrmann made an online GUI tool to help creating your own theme for
#   Keypirinha (thanks!). Check it out at:
#     https://fuhrmann.github.io/keypirinha-theme-builder/
# * In Keypirinha, the GUI theme impacts if and how GUI elements are displayed,
#   as well as their colors and the fonts to use
# * An empty value (default) implies the use of the hard-coded default theme.
#   See [theme/Default] section declared below in this file, for an exhaustive
#   list of the supported theme settings, as well as their respective default
#   values.
# * A theme must be declared in its dedicated [theme/NAME] section where NAME
#   (without quotes) is the value to assign here in order to use this theme
# * You can declare as much themes (sections) as you want in your configuration
#   file and keep them there, so that only this setting has to be changed to
#   switch from one theme to another
# * CAUTION:
#   Section names in Keypirinha are case-sensitive so that "[theme/foo]" is
#   different than "[theme/Foo]". Keep that in mind if you wish to override an
#   existing theme!
# * TIP:
#   Change this setting at runtime to ease comparison
# * Cascading themes:
#   Optionally, themes can be cascaded (comma-separated list of theme names;
#   up to 5 themes can be cascaded)
#   * Example:
#       theme = MiniLayout, MonokaiColors
#   * In this example, Keypirinha will:
#     1. first load the internal hard-coded theme
#     2. then will overwrite its properties with only the ones defined in
#        MiniLayout
#     3. the resulting theme is then overridden by the values defined in
#        MonokaiColors
#   * Because a theme allows to tweak the layout (elements and spacing), the
#     fonts and the colors, one possible use of cascading your themes is to
#     split them into 3 logical groups: layout-only, font-only and color-only.
#     Note that this is for convenience only, not required.
#   * Note that the "Layout", "Colors" and "Full" suffixes in the names of the
#     sample themes is a naming convention only, not required by Keypirinha.
#theme = MediumLayout, bitter
theme = Mediumlayout, Hemimo

[external]
# Section dedicated to the setup of external applications launched by Keypirinha
# or the packages.

# The text editor to invoke when the "Edit" action of an item is triggered
# * By default (empty value), Keypirinha will try to invoke your system's Edit
#   verb when available.
# * See also the "config_editor" setting below.
# * CAUTION: This value is expected to be a valid command line! That is, if the
#   path to your executable or any other argument contains whitespaces, it must
#   be double-quoted.
# * Special behavior with known editors:
#   Keypirinha will take advantages of the available command line options
#   offered by some recognized editors:
#   * Notepad2 and variants: enable a more convenient layout when editing
#     several files at the same time.
#   * SublimeText and Atom: also open package's directory when editing package
#     configuration files.
# * The "editor_accepts_multifiles" value indicates if the editor accepts
#   multiple files on the command line. For example, for very simple editors
#   like Notepad, this value should be set to "no" (without quotes), but for
#   MDI-style editors (Multiple Document Interface) like Notepad++ and
#   SublimeText, this value may be set to "yes".
# * Examples:
#     editor = notepad.exe
#     editor = "${env:SYSTEMROOT}\notepad.exe"
#     editor = "${env:EDITOR}"
#     editor = "C:\Program Files\FooEditor\editor.exe" -open
#editor =
#editor_accepts_multifiles = no

# The text editor to specifically edit Keypirinha's configuration files
# * Possible configurations:
#   * If this value is defined, it must be of the same format than for the
#     "editor" setting
#   * A NON-COMMENTED (i.e. defined) and EMPTY value forces Keypirinha to use
#     the bundled Notepad2-mod editor to edit its configuration files
#   * A COMMENTED (i.e. undefined) value means you want to rely on the "editor"
#     setting to edit Keypirinha's configuration files as well
#config_editor =
#config_editor_accepts_multifiles = no

# The console emulator to use when launching console applications or scripts.
# * CAUTION: This value is expected to be a valid command line! That is, if the
#   path to your executable or any other argument contains whitespaces, it must
#   be double-quoted.
# * On Windows platforms, there are two kinds of subsystems an executable can
#   run on: GUI and console.
#   This setting applies for the later. It can be useful in many cases. For
#   example, it happens often that after double-clicking on a console
#   application/script from the Explorer, a console window appears only in a
#   glimpse, without giving you a chance to check what's going on.
#   Some program like ConEmu will not close if the duration of the execution was
#   less than a given amount of seconds. Giving you the chance to know what
#   happened.
# * Note that this setting is, at best, a hint to the plugins and while it is
#   recommended to plugin developers to use it, it is not technically required
#   to do so. Official plugins follow this guideline though.
# * Example: terminal = "${env:PROGRAMFILES}\ConEmu\ConEmu64.exe" /cmd
# * Default: no alternative terminal emulator, system's default is used
#terminal =

# The file explorer to use instead of Windows Explorer
# * CAUTION: This value is expected to be a valid command line! That is, if the
#   path to your executable contains whitespaces, it must be double-quoted.
# * By default, the path of the file/folder to open is appended to the specified
#   command line (and automatically quoted if needed). However for convenience,
#   some placeholders may be used.
# * Supported placeholders (quoted automatically at runtime, if needed):
#   * {{file}}: the path to the file/folder
#   * {{name}}: the name of of the file/folder (including its extension)
#   * {{parent}}: the path to the parent folder of the file/folder
#   * {{dir_or_parent}}: some explorers (e.g. Explorer++) accept only folders,
#     this placeholder will expand to {{file}} if it is a folder, or to
#     {{parent}} otherwise
# * About the placeholders:
#   * May you need more control over quoting, Keypirinha supports the following
#     variants:
#     * {{file_nq}}, {{name_nq}}, {{parent_nq}}, {{dir_or_parent_nq}}:
#       always non-quoted
#     * {{file_q}}, {{name_q}}, {{parent_q}}, {{dir_or_parent_q}}:
#       always quoted
# * Examples:
#     file_explorer = "C:\Path\To\My Explorer.exe" {{file}}
#     file_explorer = C:\Explorer\Explorer.exe -d {{parent}} {{name}}
# * Default: empty, Windows Explorer is used
file_explorer = ${var:_apps}\ppx\PPCW.EXE -r -k %J"{{file}}"

# The web browser to use when launching web links (URLs)
# * By default, Keypirinha and its plugins will use system's default web
#   browser. This setting allows to bypass this detection mechanism and force
#   the use of a given web browser.
# * CAUTION: This value is expected to be a valid command line! That is, if the
#   path to your executable or any other argument contains whitespaces, it must
#   be double-quoted.
# * Note that this setting is, at best, a hint to the plugins and while it is
#   recommended to plugin developers to use it, it is not technically required
#   to do so. Official plugins follow this guideline though.
# * Example:
#     web_browser = "${env:PROGRAMFILES(X86)}\Google\Chrome\Application\chrome.exe"
# * Default: empty, system's default web browser is used
web_browser = ${var:_apps}\Scoop\apps\qutebrowser\current\qutebrowser.exe


# By default, would you like Keypirinha to launch web links in a new window?
# * This value can be empty, or a boolean value like "yes" or "no" (without
#   quotes).
# * REMARKS:
#   * This setting is, at best, a hint given to the plugins and the web browser
#     itself. Moreover, depending on the web browser, this setting might be
#     mutually exclusive with an other web_browser_* setting.
#   * The plugin that owns the item you want to execute might offer you to
#     override this setting to allow a more fine-grained configuration. Like the
#     official WebSearch plugin for example, which allows you to override this
#     setting on a site-per-site basis.
# * Default: empty value, meaning you prefer to rely on plugin's or browser's
#   default behavior
#web_browser_new_window =

# By default, would you like Keypirinha to launch web links usigng web browser's
# private mode?
# * Same value type, default value and remarks than for the
#   web_browser_new_window setting.
#web_browser_private_mode =


[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file (i.e. this file) will be propagated to
# subsequently loaded configuration files (packages' configuration files).
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DRIVE,
# APP_DIR, APP_EXE, APP_ARCH, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS,
# PROFILE_DIR_LIVE_PACKS, PROFILE_DIR_USER and the KNOWNFOLDER_* and
# KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.
_apps = c:\bin

[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.


[theme/bitter]
opacity_back = 98
satellite_show = always
satellite_pos = topleft
satellite_size = small
control_margin = 4
textbox_padding = 3
listitem_padding = 0
layout = list_icon,list_dialnum,list_selmark,list_actions,status
color_background = #283026
color_foreground = #F1F1F1
color_title = #F1F1F1
color_textbox_back = #1D1F1F
color_faded = #a2a2a2
color_status = #767676
color_accent = #00FFE6
color_warn = #FFC90B
color_listitem_back = #283026
color_listitem_title = #f2f2f2
color_listitem_desc = #767676
color_listitem_tips = #708A72
color_listitem_selected_back = #304F47
color_listitem_selected_title = #00FFE6
color_listitem_selected_desc = #f2f2f2
color_listitem_selected_tips = #A9FFAD
font_large_size = 18
font_large_style = bold
font_snormal_size = 10
font_snormal_style = cleartype
font_normal_size = 12
font_normal_style = cleartype
font_small_size = 9
font_small_style = cleartype
font_face = Yu Gothic UI, arial, Segoe UI
compact_results = no
listitem_title_font = snormal

[theme/Hemimo]
opacity_back = 98
satellite_show = always
satellite_pos = topleft
satellite_size = small
control_margin = 3
textbox_padding = 4
listitem_padding = 1
layout = list_icon,list_dialnum,list_actions,status,list_selmark
color_background = #65C4FF
color_foreground = #F1F1F1
color_title = #f2f2f2
color_textbox_back = #23444A
color_faded = #a2a2a2
color_status = #DEFFE4
color_accent = #8CFF00
color_warn = #FFDE0F
color_listitem_back = #227995
color_listitem_title = #CAE8E8
color_listitem_desc = #76A9C6
color_listitem_tips = #3EC7CA
color_listitem_selected_back = #23444A
color_listitem_selected_title = #00FFF0
color_listitem_selected_desc = #54B2E3
color_listitem_selected_tips = #42EC98
font_large_size = 17
font_large_style = bold
font_snormal_size = 10
font_snormal_style = bold
font_normal_size = 14
font_normal_style = cleartype
font_small_size = 12
font_small_style = cleartype
font_face = Yu Gothic UI, arial, Segoe UI
compact_results = no
listitem_title_font = snormal
