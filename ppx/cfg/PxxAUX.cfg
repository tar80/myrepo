PPxCFG  = 
;---------------------------------------------------------------------------
;/ S_auxRCLONE/ S_auxGIT/
;---------------------------------------------------------------------------
;** config
;---------------------------------------------------------------------------
-|S_auxRCLONE =
; S_auxRCLONE = {
; base    = aux://S_auxRCLONE/ %; remote:/path
; cmd     = rclone
; lf      = %'list'%\rclone.xlf
; ls2lf   = %0%\auxcmd\ls2lf.exe
; code    = %'scr'%\aux_main.js
; setAux  = *execute %n,*string i,RootPath=aux://S_auxRCLONE/%*regexp("%*path","/^(.*:).*/$1/") %%: *string i,stragePath=%*path %%: *mapkey use,K_rcloneMap %:
; list    = *ifmatch 0,0%'RCLONE_CONFIG_PASS' %: %k"@TAB" %: *set RCLONE_CONFIG_PASS=%*pass
;           %*setAux
;           %Obd %*ls2lf -j "A:Attr,S:Size,W:ModTime,F:Name" %*lf %*cmd lsjson "%*path%*addchar(/)"
;           %*lf
; overup  = *string i,NewPath=%si"RootPath" %:
; leave   = *string i,stragePath= %: *mapkey delete,K_rcloneMap %:
; get     = *execute C,*logwindow "copy %*src" %: %*cmd copy "%*path%*addchar(/)%*src" "%*name(D,%*dest)" %:
; get-m   = *execute C,*logwindow "move %*src" %: %*cmd move "%*path%*addchar(/)%*src" "%*name(D,%*dest)" %:
; store   = *execute C,*logwindow "copy send %*path" %: %*cmd copy "%*src" "%*path%*addchar(/)" %:
; store-m = *execute C,*logwindow "move send %*path" %: %*cmd move "%*src" "%*path%*addchar(/)" %:
; copy    = *execute C,*logwindow "copy %*src send %*dest" %: %*cmd copy "%*path%*addchar(/)%*src" "%*dest" %:
; move    = *execute C,*logwindow "move %*src send %*dest" %: %*cmd move "%*path%*addchar(/)%*src" "%*dest" %:
; makedir = *execute C,*logwindow "makedir %*path" %: %*cmd mkdir "%*path" %:
; del     = *execute C,*logwindow "delete %*path" %: %*cmd delete "%*path" %:
; deldir  = *execute C,*logwindow "remdir %*path" %: %*cmd rmdir "%*path" %:
; }

S_auxRCLONE = {
base    = aux://S_auxRCLONE/ %; remote:/path
cmd     = rclone.exe
lf      = %'list'%\rclone.xlf
ls2lf   = %0%\auxcmd\ls2lf.exe
code    = %'scr'%\aux_main.js
setAux  = *execute %n,*string i,RootPath=aux://S_auxRCLONE/%*regexp("%*path","/^(.*:).*/$1/") %%: *string i,stragePath=%*path %%: *mapkey use,K_rcloneMap %:
list    = *if 0%sp"runJsAuxMain" %: *stop 0==0%si"within" ;二重実行の防止
          *if %*keystate(226)%*keystate(220)%*keystate(116)%*keystate(13)%*keystate(9)%*keystate(8) %: *string i,auxID=%n ;特定キー押下時リスト更新フラグ keystate=226:\_, 220:\|, 116:F5, 13:ENTER, 9:TAB, 8:BS
          *ifmatch 0,0%'RCLONE_CONFIG_PASS' %: %k"@TAB" %: *set RCLONE_CONFIG_PASS=%*pass
          *ifmatch !0,0%si"auxID" %: *script %*code,rclone,%*lf,%*path,0,%si"auxID"
          %*setAux
          *string i,auxID= %: *string i,within= %: %*lf
overup  = *string i,NewPath=%si"RootPath" %: *linemessage !"<<root>>%:
leave   = *string i,stragePath= %: *mapkey delete,K_rcloneMap %:
get     = *string i,auxID=%n %: *execute C,*logwindow "copy %*src" %: %*cmd copy "%*path%*addchar(/)%*src" "%*name(D,%*dest)" %:
get-m   = *string i,auxID=%n %: *execute C,*logwindow "move %*src" %: %*cmd move "%*path%*addchar(/)%*src" "%*name(D,%*dest)" %:
store   = *string i,auxID=%~n %: *execute C,*logwindow "copy %*src send %*path" %: %*cmd copy "%*src" "%*path%*addchar(/)" %:
store-m = *string i,auxID=%~n %: *execute C,*logwindow "move %*src send %*path" %: %*cmd move "%*src" "%*path%*addchar(/)" %:
copy    = *string i,auxID=%n %: *string i,within=1 %: *execute C,*logwindow "copy %*src send %*dest" %: %*cmd copy "%*path%*addchar(/)%*src" "%*dest" %:
move    = *string i,auxID=%n %: *string i,within=1 %: *execute C,*logwindow "move %*src send %*dest" %: %*cmd move "%*path%*addchar(/)%*src" "%*dest" %:
makedir = *string i,auxID=%n %: *execute C,*logwindow "makedir %*path" %: %*cmd mkdir "%*path" %:
del     = *string i,auxID=%n %: *execute C,*logwindow "delete %*path" %: %*cmd delete "%*path" %:
deldir  = *string i,auxID=%n %: *execute C,*logwindow "remdir %*path" %: %*cmd rmdir "%*path" %:
}

-|K_rcloneMap =
K_rcloneMap = {
V , %Oq *execute ba,*job start %%: rclone cat %*regexp("%si"stragePath"%*addchar(/)","/:\//:/")%R | %0ppvw %%& *job end
}
