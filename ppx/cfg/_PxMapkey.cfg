PPxCFG  = 
;---------------------------------------------------------------------------
;@desc mapkey
;@table K_liedMap, K_resetMap, K_cmdGrepMap
;---------------------------------------------------------------------------
; -|K_liedMap =
; K_liedMap = {
; ENTER   , *string o,path=%*extract("%*edittext")
          ; *ifmatch /^aux:.*/,%so"path" %: %K"@ENTER" %: *stop
          ; *if 10==%*editprop(list)%*result(exists,%so"path") %: %K"@DOWN@ENTER" %: *stop
          ; %K"@ENTER"
; \ENTER  , *string o,path=%*extract("%*edittext")
          ; *ifmatch /^aux:.*/,%so"path" %: %K"@ENTER" %: *stop
          ; *if 10==%*editprop(list)%*result(exists,%so"path") %: %K"@DOWN@ENTER" %: *stop
          ; *execute ~,*jumppath %*edittext
; F12     , *ifmatch Jumppath..repository*,%W %: *script %'scr'%\gitMakepath.js %: *stop
          ; %Oq *run -noactive -d:%0 fenrirScan.exe %& *completelist /reload %: *stop
; ^S      , *linemessage [Add] %*edittext %: %Obd echo +%*edittext>> %0%\ScanRule.ini
; ^V_HC0  , *if 0%se"module" %: *completelist -module:off %: *linemessage %: *string e,module= %: *stop
          ; *completelist -module:on %: *linemessage module:on
          ; *string e,module=1
; }

; -|K_resetMap =
; K_resetMap = {
; ESC , *script %'scr'%\cmdReset.js
; BS  , *mapkey delete,K_resetMap %: *color back
; }

; -|K_cmdGrepMap =
; K_cmdGrepMap = {
; ^V_HC0 , *ifmatch "git grep",%si"cmd" %: *gitstring commit %: *linemessage %si"git_string"
; ^W  , *ifmatch %si"cmd"%si"output",rgLF %: %M_grep,!rgvim
;       *ifmatch %si"cmd"%si"output",rgvim %:  %M_grep,!gitgrepLF
;       *ifmatch %si"cmd"%si"output",jvgrepPPv %:  %M_grep,!gitgrepLF
;       *ifmatch %si"cmd"%si"output",git grepLF %:  %M_grep,!rgLF
;       *setcaption [%si"output"] %si"cmd" %si"gopt" ※\=\\\\
; }

; -|K_tagSysMap =
; K_tagSysMap = {
; ^S  , *script %'scr'%\appendText-utf8lf.js
;       *linemessage save tag
;       *script %'scr'%\tagMakeMenu.js
; }
