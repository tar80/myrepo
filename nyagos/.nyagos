local detect_marker = function(path, marker)
  repeat
    if nyagos.access(nyagos.pathjoin(path, marker), 0) then
      break
    end
    path = path:match('^(.+)\\')
  until not path

  if not path then
    return false, ''
  end

  return true, path
end

local branch_info = function()
  local ok = detect_marker(nyagos.getwd(), '.git')

  if not ok then
    return false, ''
  end

  local status = nyagos.eval('git -c core.quotepath status -b --porcelain')
  local lines = {}

  for line in status:gmatch('[^\n]+') do
    table.insert(lines, line)
  end

  local branchname = lines[1]:gsub('##%s([^\\.]+).*', '%1')
  local staged, unstaged, conflicted = 0, 0, 0

  for i = 2, #lines do
    if lines[i]:find('UU') then
      conflicted = conflicted + 1
    end
    if lines[i]:sub(1, 1):find('[MADRC]') then
      staged = staged + 1
    end
    if lines[i]:sub(2, 2):find('[^%s!]') then
      unstaged = unstaged + 1
    end
  end

  return true, string.format('  %s +%s ~%s !%s', branchname, staged, unstaged, conflicted)
end

-- Prompt
do
  -- for cmd prompt
  nyagos.env.prompt = '$P$s'
  -- for nyagos
  local prompt = nyagos.default_prompt
  nyagos.prompt = function(this)
    local ok, stats = branch_info()
    local title = 'NYAGOS - ' .. nyagos.getwd()
    stats = ok and string.format('$e[49;90m$e[100;93m%s $e[49;90m ', stats) or '$e[49;49m'

    return prompt(string.format('$e[0m$e[49;36m%s%s$e[92m%s$_$s$e[49;39m', this, stats, os.date('%H:%M:%S')), title)
  end
end

-- options
nyagos.histsize = 200

-- system env
nyagos.env.tar80 = 'C:\\bin\\repository\\tar80'
nyagos.envadd('PATH', '%scoop%\\apps\\git\\current\\usr\\bin')
nyagos.env.LESSCHARSET = 'utf-8'
local bat_opts = '--color=always --style=numbers,changes --line-range=:50 --theme=Nord'
local fzf_opts = {
  '--exit-0',
  '--reverse',
  '--margin=0,1',
  '--height 80%',
  '--inline-info',
  '--bind ctrl-f:page-down,ctrl-b:page-up',
  '--bind ctrl-d:preview-page-down,ctrl-u:preview-page-up',
  '--color=fg:-1,bg:-1,hl:#FFCC00',
  '--color=fg+:#4D84A8,bg+:-1,hl+:#00EAFF',
  '--color=info:#AA82FA,prompt:#2CDEDE,pointer:#6BFF26',
  '--color=marker:#C06EFF,spinner:#A357FF,header:#A7D1D1',
}
nyagos.env.FZF_DEFAULT_OPTS = table.concat(fzf_opts, ' ')
nyagos.env.FZF_DEFAULT_COMMAND = 'fd -HL -c never --exclude ".git" .'
nyagos.env._ZO_FZF_OPTS = (function(opts)
  table.insert(opts, '--preview="bat ' .. bat_opts .. ' "{2..}/readme.md""')
  return table.concat(opts, ' ')
end)(fzf_opts)

local fzf = { cmd = 'fzf.exe' }
setmetatable(fzf, {
  __index = {
    gitlog = function(self)
      return string.format('%s --preview="git show {1}"', self.cmd)
    end,
    gitdiff = function(self)
      return string.format('%s --preview="echo {2} |xargs git diff --color"', self.cmd)
    end,
    bat = function(self)
      return string.format('%s --preview="bat ' .. bat_opts .. ' "{}""', self.cmd)
    end,
  },
})

-- alias
nyagos.alias.__dump_history = function()
  local uniq = {}
  for i = nyagos.gethistory() - 1, 1, -1 do
    local line = nyagos.gethistory(i)
    if line ~= '' and not uniq[line] then
      print(line)
      -- nyagos.write(line, '\n')
      uniq[line] = true
    end
  end
end
nyagos.alias.keyp = 'C:\\bin\\Keypirinha\\keypirinha.exe'
nyagos.alias.zi = function()
  local path = nyagos.eval('zoxide query -i')
  if path ~= '' then
    nyagos.exec(string.format('cd "%s"', path))
  end
  return nil
end
nyagos.alias.z = function(arg)
  local path = nyagos.eval('zoxide query ' .. arg[1])
  if path ~= '' then
    nyagos.exec(string.format('cd "%s"', path))
  end
  return nil
end
nyagos.alias.bb = function()
  local path = nyagos.eval('fd -Ht f -c never -E .git -E node_modules | ' .. fzf:bat())
  if path == '' then
    return nil
  end
  nyagos.exec(string.format('bat --style=numbers,changes --theme=Nord "%s"', path))
end
nyagos.alias.cc = function()
  local path = nyagos.eval('fd -Ht d -c never -E .git -E node_modules | ' .. fzf.cmd)
  if path ~= '' then
    nyagos.exec(string.format('cd "%s"', path))
  end
  return nil
end
nyagos.alias.ll = 'lsd -l --group-dirs first --blocks permission --blocks size --blocks date --blocks name'
nyagos.alias.re = function()
  local path = nyagos.eval('fd -Lt d -c never --full-path . %tar80% | ' .. fzf.cmd)
  if path ~= '' then
    nyagos.exec(string.format('cd %s', path))
    nyagos.exec(string.format('zoxide add %s', path))
  end
  return nil
end
nyagos.alias.gd = function()
  local cmd = 'git status -s -uall| ' .. fzf:gitdiff()
  local stdout = nyagos.eval(cmd)
  if not (stdout == '' or stdout:find('^fatal:')) then
    nyagos.exec('nvim ' .. stdout:sub(3))
  end
  return nil
end

-- Completion. Highlighting input parts
nyagos.completion_hook = function(c)
  for index, item in ipairs(c.list) do
    c.shownlist[index] = string.format('\027[49;39m%s\027[49;93m%s', c.word, item:sub(string.len(c.word) + 1))
  end
  return c.list, c.shownlist
end

-- keys
nyagos.key['F1'] = function()
  nyagos.rawexec('c:\\bin\\cltc\\cltc.exe')
end

nyagos.key['F9'] = function()
  nyagos.exec('nvim %tar80%\\myrepo\\nyagos\\.nyagos')
end

nyagos.bindkey('C_N', function()
  local ok, path = detect_marker(nyagos.getwd(), 'package.json')
  if not ok then
    return nil
  end
  path = string.format('%s\\package.json', path)
  local cmd = string.format('cat %s|jq -r ".scripts|to_entries|.[]|.key + ""   "" + .value"|%s', path, fzf.cmd)
  local stdout = nyagos.eval(cmd)
  if stdout ~= '' then
    string.format('npm run %s', stdout:sub(1, stdout:find('%s')))
  end
  return nil
end)

nyagos.bindkey('C_R', function(this)
  local path = nyagos.eval('__dump_history | ' .. fzf.cmd)
  if path ~= '' then
    return path
  end
  return ''
end)

nyagos.bindkey('M_H', function(this)
  local cmd = string.format('%s|%s', 'cd --history', fzf.cmd)
  this:call('REPAINT_ON_NEWLINE')
  return string.format('"%s"', nyagos.eval(cmd))
end)

nyagos.bindkey('M_G', function()
  local result = nyagos.eval('git log --pretty="format:%h %s"|' .. fzf:gitlog())
  return string.match(result, '^%S+') or ''
end)

use('git')

-- vim:set ft=lua:
